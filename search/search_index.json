{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Castor & Pollux User Guide # Castor & Pollux is a Roland Juno-inspired oscillator. It contains two digitally controlled analog oscillators implemented using a faithfully modernized version of the original Juno 106 design. Like its inspiration, it can give you that wonderful 80's sound with independent and mixed ramp, pulse, and sub outputs. But the twins don't stop there- the second oscillator can be used to layer in thick detuned sounds, harmonically complex hard synced waveshapes, or as a fully independent second oscillator. Specifications Getting support and help Version differences Installation Overview First steps Pitch behavior Tuning Waveshapes Oscillator stacking Internal low-frequency oscillator Modes & tweaking Expander Connecting with USB Editing module settings Updating the firmware Open source hardware & software Warranty, disclaimers, and limits Acknowledgments and thanks Specifications # Available assembled or as a kit 14 HP +12 V @ 100 mA , -12 V @ 35 mA 25 mm deep 2 separate oscillators 7 octave range 9 total outputs with waveform outputs and onboard mixers Pitch CV input jacks ( 0 V to 6 V ) and pitch knobs ( -1 to +1 octave , configurable) Pulse width CV input jacks and knobs Hard sync Hardware chorusing Internal low-frequency oscillator (LFO) ModularGrid page Getting support and help # We want you to have a wonderful experience with your module. If you need help or run into problems, please reach out to us. Email is the best way for product issues, whereas Discord and GitHub are great for getting advice and help on how to customize your module or create new patches. Send us an email File a bug on GitHub Reach out on our Discord Version differences # Castor & Pollux has two different versions in the wild with significant changes between them. Fortunately, both versions are fundamentally the same brains with different user interfaces. Changes made by Castor & Pollux II include: Replacing the pitch trimpots with large knobs Replacing the pulse width, LFO, and crossfade trimpots with knobs Moving the input and output jacks to the bottom edge of the module Moving the individual waveform outputs to a separate expander Consolidating the two separate circuit boards into a single board Adding additional ESD protection to all input jacks Adding an additional LED Both versions use the same firmware and behave the same way. This manual applies to both versions, however, the illustrations shown here depict Castor & Pollux II. We made sure that all interface elements use the same symbols and labels between the versions. If you run into trouble, don't hesitate to reach out . Installation # To install this into your Eurorack setup, connect a Eurorack power cable from your power supply to the back of the module. Note that even though there's a keyed power connector on the module, double check that the red stripe is on the side labeled red stripe ! Once you've connected the power cable, secure your module to your rack rails using screws. Overview # Castor & Pollux is has two separate but intertwined oscillators. It's possible to control each oscillator independently, but they truly shine when used together. Castor & Pollux's design is focused around the connection between these two oscillators and modulating their parameters using the internal LFO. Castor & Pollux's front panel is arranged so that Castor's inputs, outputs, and controls are on the left whereas the corresponding elements are mirrored on the right for Pollux. The center contains controls for the internal LFO and crossfade mixer: Each oscillator, \u237a and \u03b2 , is controlled by its associated knobs and CV input jacks: The large pitch knob and pitch CV input control the oscillator's pitch (frequency). The smaller pulse width knob and pulse width CV input control the oscillator's pulse width . You can learn more about these inputs in the pitch behavior section. Each oscillator has a single output jack, \u2605 , and corresponding mixing knobs: Each oscillator generates three waveshapes: saw , pulse , and sub . The three mixing knobs control how much of each waveshape is present in the oscillator's output. You can read more about the sound of each waveshape in the waveshapes section. Next, the crossfade mixer combines the output of the two oscillators together: The crossfader's knob, \u03a3 , determines which oscillator is more prominent in the mix at the crossfade output, \u264a\ufe0f . The oscillator stacking section has more details and sound samples of combining the oscillators together. Next up, in the very middle there's the LFO knob, \u03c6 : This internal LFO can be used to modulate several parameters in interesting ways depending on the mode . Last, but not least, there is a single button in the center that's used for changing modes and enabling the tweak overlay: You can learn more about the different modes and tweaking in the modes & tweaking section . First steps # If you're not sure where to start with Castor & Pollux this section has a few patches to get you up and running. Grab your patch cables and follow along. Patch one # First, dip your toes in by putting together this patch: Turn all the knobs and trimpots fully counter-clockwise Turn the ramp mix trimpot for Castor fully clockwise Patch Castor's output jack to your rack's output or headphones module You should hear a low, rumbly bass sound. Turn Castor's pitch knob (the big knob at the top left) and you'll hear Castor sweep through its range. This is called coarse behavior and it's explained in more detail in the pitch section. You can keep playing around with this patch by moving the mix trimpots for each of the waveshapes to hear how they sound. You can also jump down to the waveshapes section to learn more about those. Patch two # Ready for more? Try out this patch: Turn Castor's pitch knob and pulse knob to 12 o' clock Turn at least one of Castor's mix trimpots clockwise Patch some V/oct CV from a sequencer, controller, or other source into Castor's pitch CV input jack. Patch Castor's output jack to your rack's output or headphones module Castor should now be playing notes based on the CV you're sending it. You can turn Castor's big pitch knob to tune/detune relative to the input. This is called fine behavior and it's also explained in more detail in the pitch section. Patch three # Okay, one last patch and you'll be ready for anything: Turn Castor's pitch knob and pulse knob to 12 o' clock Turn Pollux's pitch knob and pulse knob to 12 o' clock Turn at least one of Castor's mix trimpots clockwise Turn at least one of Pollux's mix trimpots clockwise Turn the LFO knob fully counter-clockwise Turn the crossfade knob to 12 o' clock Patch some V/oct CV from a sequencer, controller, or other source into Castor's pitch CV input jack. Patch the crossfade output jack to your rack's output or headphones module This is where things get fun- at this point, Castor & Pollux should both be playing (roughly) the same pitch and they're both coming through the crossfade output jack. Now, slowly wiggle Pollux's pitch knob. This is the most basic form of oscillator stacking and it's your gateway to the big, raw, and fun sounds of Castor & Pollux. Now that you have a feel for Castor & Pollux, check out the rest of the manual to learn all about its various features, behaviors, and sounds. Pitch behavior # Due to the intertwined nature of Castor & Pollux's oscillators, the effect of the pitch CV jack and knobs take on different behaviors in different circumstances. Customization You can modify Castor & Pollux's pitch behavior using the settings editor . Coarse # When nothing is patched into Castor's pitch CV jack, Coarse behavior is used. Castor's pitch is determined by its pitch knob which sweeps through six octaves and quantizes to the nearest semitone. Fine # If there is a signal patched into Castor's pitch CV jack, Fine behavior is used. The input CV should be between 0 V and 6 V . The pitch knob offsets the input CV by \u00b11 octave . The pitch knob has a sort of \"virtual notch\" at the 12 o' clock position to help you dial in the frequency you're looking for. Pollux also uses Fine behavior but follows Castor if nothing is patched into its pitch CV jack. Pollux doesn't ever use Coarse behavior. Multiply # Finally, Pollux uses Multiply behavior when in Hard Sync mode. In this case, Pollux follows Castor and the knob adds up to three octaves. Jack detection # Castor & Pollux detects whether a signal is patched into the pitch jacks by checking if the signal is above 0 V . In many cases this works well, however, you may run into issues if you use a sequencer or controller that often sends 0 V signals. Castor & Pollux will think that a jack isn't detected and erroneously switch to a different pitch behavior . If this is something you're running into you can turn off jack detection using the settings editor . Tuning # Castor & Pollux is an analog oscillator with a digital brain. It's calibrated during assembly to accurately track 1 V / octave on the pitch CV jacks and you can use the pitch knobs to adjust the tuning of each oscillator. To make tuning easier, Castor & Pollux provides two ways of using the pitch knob to dial in the perfect frequency. Linear response 440 Hz Non-linear response 440 Hz pitch knob First, the pitch knobs have a \"virtual notch\" because of their non-linear response: they're less sensitive in the middle of their range than the edges. It's usually easier to understand this visually, so try out the little illustration above and notice that with the non-linear response it's much easier to tune to frequencies around 440 Hz . This non-linear response only happens when the oscillator is using the Follow pitch behavior . You can configure how strong this effect is using the settings editor . Second, the tweak overlay allows extra-fine control over tuning. Holding down the button and turning the pitch knob allows you to apply an additional \u00b12.5 semitone offset. This offset is applied to the oscillator regardless of the pitch behavior or the current mode . Waveshapes # Just like the Juno, Castor & Pollux generates three waveshapes: ramp, pulse, and sub. The ramp wave looks like this: click the image to start and stop the animation Simulation vs reality These are simulations of perfect waveshapes. Castor & Pollux's waveshapes are generated by analog circuitry and they don't quite look exactly like these examples. That's a good thing - the analog weirdness is what adds character to the module. The ramp sounds like this: The pulse wave depends on the pulse width CV and knob. You can vary the pulse width in this animation to see how it affects the waveshape: pulse width You can also use internal low-frequency oscillator to modulate the pulse width in LFO PWM mode . Here are some examples of the pulse wave's sounds: Finally, there's the sub waveshape. It's a square wave that's one octave lower. Here's what it looks like: And here are some sound samples of the sub waveshape: These waveshapes can be mixed together to produce much more complex and interesting variants - try playing with the sliders under this animation to see how it affects the waveshape: ramp volume pulse volume pulse width sub volume Here are some sound samples of various mixes: Oscillator stacking # Because Castor & Pollux has two oscillators, you can combine them together to build much more complex sounds. When there is no input into the second oscillator's pitch CV jack, it follows the pitch of the first oscillator. You can use the pitch knob of the second oscillator to detune the second oscillator and cause interesting interactions with the first oscillator. You'll take your output from the combined output (marked by the symbol \u264a\ufe0e ) and you can control the relative volume of the two oscillators using the crossfader (marked by the symbol \u03a3 ). You can play around with this interactive animation to see how detuning and mixing changes the final waveshape: detuning crossfader (\u03a3) This animation just uses the ramp waveshape, but the crossfader takes the mix from each oscillator's mixer, so you can combine many different waveshapes. Here are some sound samples of oscillator stacking: Internal low-frequency oscillator # Castor & Pollux's built-in low-frequency oscillator can be used to modulate various parameters depending on the current mode . By default, the internal LFO is a straightforward triangle wave. However, the settings editor allows you to change the LFO's waveshape between triangle, sine, sawtooth, and square, as well as combine a second waveshape with the first to create interesting LFO effects. Modes & tweaking # Castor & Pollux has four different modes that change the module's overall functionality: Chorus mode, the default mode, uses the internal LFO to modulate Pollux's frequency. LFO PWM mode uses the internal LFO to modulate both oscillator's pulse width. LFO FM mode uses the internal LFO to modulate both oscillator's frequency. Hard Sync mode produces metallic sounds by syncing Pollux's ramp core to Castor's. To cycle between modes, tap the button in the middle and the module will play a short animation to show that it has switched modes. On the other hand, holding the button turns on the tweak overlay. This gives you access to additional parameters depending on the mode. When moving in and out of the tweak overlay, the knobs get \"latched\" so that they don't immediately cause changes - similar how many synthesizers work when loading patches. The parameter only starts changing once you've moved the knob. In all modes, the pitch knobs control the extra-fine tuning . Chorus # Castor & Pollux's default mode is the Chorus mode. This mode is inspired by the original Juno's analog chorus circuit, however, instead of applying the chorus affect after sound generation, Castor & Pollux's chorusing works by varying the frequency of the second oscillator using its internal low-frequency oscillator . This means you have to use both oscillators to hear this effect and it works best if Pollux is following Castor's pitch. The LFO knob, \u03c6 , determines the intensity of chorusing from none when fully counter-clockwise to its maximum at fully clockwise. The crossfade mixer, \u03a3 , also has an impact on the intensity of the chorus. When holding the tweak button, the LFO knob, \u03c6 , controls the LFO's frequency. You can play around with this interactive animation to see how the chorusing amount changes the final waveshape. You'll need to click the animation to start it otherwise you won't really be able to see the chorusing effect. chorusing amount (\u03c6) Here are some sound samples of chorusing: LFO PWM # LFO PWM mode uses the internal LFO to modulate the pulse width of each oscillator. This only affects the pulse waveshape . The LFO knob, \u03c6 , determines the frequency of the internal LFO. Meanwhile, each oscillator's pulse width knob controls the depth of modulation from none when fully counter-clockwise to its maximum at fully clockwise. Any signal patched into the pulse width jack is summed with the knob. When holding the tweak button, each oscillator's pulse width knob controls the center of the pulse width modulation. LFO FM # LFO FM mode uses the internal LFO to modulate the pitch for each oscillator. This is similar to the Chorus mode , except it applies to both oscillators instead of just Pollux. The LFO knob, \u03c6 , determines the frequency of the internal LFO. Meanwhile, each oscillator's pulse width knob controls the depth of pitch modulation from none when fully counter-clockwise to its maximum at fully clockwise. Unlike the LFO PWM mode, the pulse width jack has no impact on modulation. When holding the tweak button, each oscillator's pulse width knob controls the oscillator's pulse width. Hard sync # Hard sync is a feature seen in several synthesizer voices that have two or more oscillators. However, it's not a feature seen on the original Juno because each voice only had one oscillator. Luckily, Castor & Pollux has two oscillators! Hard sync mode syncs Pollux's oscillator to Castor's frequency - Pollux's output retains the same base frequency as Castor but the waveshape changes dramatically with Pollux's pitch. In other words, it'll sound like the same note but have a much different, usually metallic, timbre. Since hard sync only affects Pollux, you'll have to use either Pollux's output or the crossfade output to hear the change in timbre. Here are some sound samples of hard sync: Hard sync mode's controls are the same as chorus mode except that Pollux's pitch knob uses the Multiply behavior : Hey, listen! Due to the way hard sync works, you shouldn't set the second oscillator to a lower frequency than the first. It'll just result in the sound growing softer since the second oscillator doesn't have enough time to output a complete wave cycle. Expander # Castor & Pollux II includes a small expander that provides individual output jacks for each oscillator's waveshapes . To use the expander, connect the small ribbon cable to the back of Castor & Pollux in the header labeled Expander . Connect the other end to the matching header on the back of the expander. Secure the expander to your case using screws. Lost cable? Happens to the best of us. Contact us to get a replacement or grab a 10-pin 2x5 Socket-Socket 1.27mm IDC cable (also called a SWD cable) like these from Adafruit and SparkFun . Connecting with USB # You can connect Castor & Pollux to your computer using a standard micro USB cable, which lets you edit settings and update the firmware . The micro USB port is located on the backside of the module. Once you've connected a cable, be careful not to put too much stress on the connector as it's possible to damage the connector with enough force. Power Castor & Pollux II is happy to run on USB power when editing settings and updating firmware, but Castor & Pollux I needs power from your rack power supply while connected to USB. Editing module settings # Even though Castor & Pollux uses analog circuitry to make its beautiful sounds, there is a little microcontroller brain inside that's orchestrating everything. There are lots of settings you can tweak over USB, such as the LED brightness, the range of the pitch knobs, quantization, and more. Connect your module to your computer using a USB cable and then head over to the web-based settings editor to tweak to your heart's content. You don't need to install any software or drivers. Updating the firmware # Download the latest firmware from GitHub . It's the .uf2 file. Connect your module to your computer using a USB cable . Place Castor & Pollux in bootloader mode by quickly pressing the Reset button twice. The reset button is the small button next to the USB port. Once in bootloader mode, you should see an external drive on your computer named GEMINIBOOT . Copy the .uf2 file from step one to the GEMINIBOOT drive. The module should restart by itself. Open source hardware & software # Castor & Pollux is completely open source and hacking is encouraged. The firmware is available under the MIT License . Note that the firmware uses some third-party libraries that are under different, but compatible terms. Read the full text of the license for more details. The hardware designs are available under the permissive CERN-OHL-P v2 license, and is designed using KiCAD , which is also free and open source. You can open the hardware files using KiCAD, or you can download a PDF of the schematics . Castor & Pollux is certified open source hardware . Warranty, disclaimers, and limits # Modules purchased from Winterbloom have a warranty of six months from the date of purchase. This warranty covers any manufacturing defects in the module. It does not cover damage due to incorrect handling, storage, power, overvoltage events, or modifications. Please contact us if you are experiencing issues with your module. Modules returned under warranty will either be refunded, replaced, or repaired at our discretion. You will be responsible for the cost of returning the module to Winterbloom. Because Eurorack has a vast number of possible combinations of power supplies, modules, cases, and accessories, it is impossible for us to guarantee compatibility with every possible configuration. We make a reasonable effort to test modules with several power supplies, cases, and other modules. We encourage tinkering, however, we will not refund, repair, or replace any products that have been modified. We have stress tested Castor & Pollux under the following conditions. These are provided for reference only; we do not guarantee that the module will function under these conditions. Continuous run time: at least 48 hours Overvoltage from power supply: at least \u00b118 V Reverse voltage from power supply: at least \u00b118 V Undervoltage from power supply: as low as \u00b110 V Over and under voltage on inputs: at least \u00b18 V Output connected to another output: at least \u00b18 V Output shorted to ground: at least 60 minutes Acknowledgments and thanks # Castor & Pollux would not be possible without the help of the Adafruit, support from Microchip, and the volumes of literature documenting and analyzing the Juno's DCO design. We would also like to acknowledge the following individuals for their outstanding support: Jeremy Blake Kris Kaiser Stephen McCaul Sarah Ocean Izaak Hollander","title":"User Guide"},{"location":"#specifications","text":"Available assembled or as a kit 14 HP +12 V @ 100 mA , -12 V @ 35 mA 25 mm deep 2 separate oscillators 7 octave range 9 total outputs with waveform outputs and onboard mixers Pitch CV input jacks ( 0 V to 6 V ) and pitch knobs ( -1 to +1 octave , configurable) Pulse width CV input jacks and knobs Hard sync Hardware chorusing Internal low-frequency oscillator (LFO) ModularGrid page","title":"Specifications"},{"location":"#getting-support-and-help","text":"We want you to have a wonderful experience with your module. If you need help or run into problems, please reach out to us. Email is the best way for product issues, whereas Discord and GitHub are great for getting advice and help on how to customize your module or create new patches. Send us an email File a bug on GitHub Reach out on our Discord","title":"Getting support and help"},{"location":"#version-differences","text":"Castor & Pollux has two different versions in the wild with significant changes between them. Fortunately, both versions are fundamentally the same brains with different user interfaces. Changes made by Castor & Pollux II include: Replacing the pitch trimpots with large knobs Replacing the pulse width, LFO, and crossfade trimpots with knobs Moving the input and output jacks to the bottom edge of the module Moving the individual waveform outputs to a separate expander Consolidating the two separate circuit boards into a single board Adding additional ESD protection to all input jacks Adding an additional LED Both versions use the same firmware and behave the same way. This manual applies to both versions, however, the illustrations shown here depict Castor & Pollux II. We made sure that all interface elements use the same symbols and labels between the versions. If you run into trouble, don't hesitate to reach out .","title":"Version differences"},{"location":"#installation","text":"To install this into your Eurorack setup, connect a Eurorack power cable from your power supply to the back of the module. Note that even though there's a keyed power connector on the module, double check that the red stripe is on the side labeled red stripe ! Once you've connected the power cable, secure your module to your rack rails using screws.","title":"Installation"},{"location":"#overview","text":"Castor & Pollux is has two separate but intertwined oscillators. It's possible to control each oscillator independently, but they truly shine when used together. Castor & Pollux's design is focused around the connection between these two oscillators and modulating their parameters using the internal LFO. Castor & Pollux's front panel is arranged so that Castor's inputs, outputs, and controls are on the left whereas the corresponding elements are mirrored on the right for Pollux. The center contains controls for the internal LFO and crossfade mixer: Each oscillator, \u237a and \u03b2 , is controlled by its associated knobs and CV input jacks: The large pitch knob and pitch CV input control the oscillator's pitch (frequency). The smaller pulse width knob and pulse width CV input control the oscillator's pulse width . You can learn more about these inputs in the pitch behavior section. Each oscillator has a single output jack, \u2605 , and corresponding mixing knobs: Each oscillator generates three waveshapes: saw , pulse , and sub . The three mixing knobs control how much of each waveshape is present in the oscillator's output. You can read more about the sound of each waveshape in the waveshapes section. Next, the crossfade mixer combines the output of the two oscillators together: The crossfader's knob, \u03a3 , determines which oscillator is more prominent in the mix at the crossfade output, \u264a\ufe0f . The oscillator stacking section has more details and sound samples of combining the oscillators together. Next up, in the very middle there's the LFO knob, \u03c6 : This internal LFO can be used to modulate several parameters in interesting ways depending on the mode . Last, but not least, there is a single button in the center that's used for changing modes and enabling the tweak overlay: You can learn more about the different modes and tweaking in the modes & tweaking section .","title":"Overview"},{"location":"#first-steps","text":"If you're not sure where to start with Castor & Pollux this section has a few patches to get you up and running. Grab your patch cables and follow along.","title":"First steps"},{"location":"#pitch-behavior","text":"Due to the intertwined nature of Castor & Pollux's oscillators, the effect of the pitch CV jack and knobs take on different behaviors in different circumstances. Customization You can modify Castor & Pollux's pitch behavior using the settings editor .","title":"Pitch behavior"},{"location":"#tuning","text":"Castor & Pollux is an analog oscillator with a digital brain. It's calibrated during assembly to accurately track 1 V / octave on the pitch CV jacks and you can use the pitch knobs to adjust the tuning of each oscillator. To make tuning easier, Castor & Pollux provides two ways of using the pitch knob to dial in the perfect frequency. Linear response 440 Hz Non-linear response 440 Hz pitch knob First, the pitch knobs have a \"virtual notch\" because of their non-linear response: they're less sensitive in the middle of their range than the edges. It's usually easier to understand this visually, so try out the little illustration above and notice that with the non-linear response it's much easier to tune to frequencies around 440 Hz . This non-linear response only happens when the oscillator is using the Follow pitch behavior . You can configure how strong this effect is using the settings editor . Second, the tweak overlay allows extra-fine control over tuning. Holding down the button and turning the pitch knob allows you to apply an additional \u00b12.5 semitone offset. This offset is applied to the oscillator regardless of the pitch behavior or the current mode .","title":"Tuning"},{"location":"#waveshapes","text":"Just like the Juno, Castor & Pollux generates three waveshapes: ramp, pulse, and sub. The ramp wave looks like this: click the image to start and stop the animation Simulation vs reality These are simulations of perfect waveshapes. Castor & Pollux's waveshapes are generated by analog circuitry and they don't quite look exactly like these examples. That's a good thing - the analog weirdness is what adds character to the module. The ramp sounds like this: The pulse wave depends on the pulse width CV and knob. You can vary the pulse width in this animation to see how it affects the waveshape: pulse width You can also use internal low-frequency oscillator to modulate the pulse width in LFO PWM mode . Here are some examples of the pulse wave's sounds: Finally, there's the sub waveshape. It's a square wave that's one octave lower. Here's what it looks like: And here are some sound samples of the sub waveshape: These waveshapes can be mixed together to produce much more complex and interesting variants - try playing with the sliders under this animation to see how it affects the waveshape: ramp volume pulse volume pulse width sub volume Here are some sound samples of various mixes:","title":"Waveshapes"},{"location":"#oscillator-stacking","text":"Because Castor & Pollux has two oscillators, you can combine them together to build much more complex sounds. When there is no input into the second oscillator's pitch CV jack, it follows the pitch of the first oscillator. You can use the pitch knob of the second oscillator to detune the second oscillator and cause interesting interactions with the first oscillator. You'll take your output from the combined output (marked by the symbol \u264a\ufe0e ) and you can control the relative volume of the two oscillators using the crossfader (marked by the symbol \u03a3 ). You can play around with this interactive animation to see how detuning and mixing changes the final waveshape: detuning crossfader (\u03a3) This animation just uses the ramp waveshape, but the crossfader takes the mix from each oscillator's mixer, so you can combine many different waveshapes. Here are some sound samples of oscillator stacking:","title":"Oscillator stacking"},{"location":"#internal-low-frequency-oscillator","text":"Castor & Pollux's built-in low-frequency oscillator can be used to modulate various parameters depending on the current mode . By default, the internal LFO is a straightforward triangle wave. However, the settings editor allows you to change the LFO's waveshape between triangle, sine, sawtooth, and square, as well as combine a second waveshape with the first to create interesting LFO effects.","title":"Internal low-frequency oscillator"},{"location":"#modes-tweaking","text":"Castor & Pollux has four different modes that change the module's overall functionality: Chorus mode, the default mode, uses the internal LFO to modulate Pollux's frequency. LFO PWM mode uses the internal LFO to modulate both oscillator's pulse width. LFO FM mode uses the internal LFO to modulate both oscillator's frequency. Hard Sync mode produces metallic sounds by syncing Pollux's ramp core to Castor's. To cycle between modes, tap the button in the middle and the module will play a short animation to show that it has switched modes. On the other hand, holding the button turns on the tweak overlay. This gives you access to additional parameters depending on the mode. When moving in and out of the tweak overlay, the knobs get \"latched\" so that they don't immediately cause changes - similar how many synthesizers work when loading patches. The parameter only starts changing once you've moved the knob. In all modes, the pitch knobs control the extra-fine tuning .","title":"Modes &amp; tweaking"},{"location":"#expander","text":"Castor & Pollux II includes a small expander that provides individual output jacks for each oscillator's waveshapes . To use the expander, connect the small ribbon cable to the back of Castor & Pollux in the header labeled Expander . Connect the other end to the matching header on the back of the expander. Secure the expander to your case using screws. Lost cable? Happens to the best of us. Contact us to get a replacement or grab a 10-pin 2x5 Socket-Socket 1.27mm IDC cable (also called a SWD cable) like these from Adafruit and SparkFun .","title":"Expander"},{"location":"#connecting-with-usb","text":"You can connect Castor & Pollux to your computer using a standard micro USB cable, which lets you edit settings and update the firmware . The micro USB port is located on the backside of the module. Once you've connected a cable, be careful not to put too much stress on the connector as it's possible to damage the connector with enough force. Power Castor & Pollux II is happy to run on USB power when editing settings and updating firmware, but Castor & Pollux I needs power from your rack power supply while connected to USB.","title":"Connecting with USB"},{"location":"#editing-module-settings","text":"Even though Castor & Pollux uses analog circuitry to make its beautiful sounds, there is a little microcontroller brain inside that's orchestrating everything. There are lots of settings you can tweak over USB, such as the LED brightness, the range of the pitch knobs, quantization, and more. Connect your module to your computer using a USB cable and then head over to the web-based settings editor to tweak to your heart's content. You don't need to install any software or drivers.","title":"Editing module settings"},{"location":"#updating-the-firmware","text":"Download the latest firmware from GitHub . It's the .uf2 file. Connect your module to your computer using a USB cable . Place Castor & Pollux in bootloader mode by quickly pressing the Reset button twice. The reset button is the small button next to the USB port. Once in bootloader mode, you should see an external drive on your computer named GEMINIBOOT . Copy the .uf2 file from step one to the GEMINIBOOT drive. The module should restart by itself.","title":"Updating the firmware"},{"location":"#open-source-hardware-software","text":"Castor & Pollux is completely open source and hacking is encouraged. The firmware is available under the MIT License . Note that the firmware uses some third-party libraries that are under different, but compatible terms. Read the full text of the license for more details. The hardware designs are available under the permissive CERN-OHL-P v2 license, and is designed using KiCAD , which is also free and open source. You can open the hardware files using KiCAD, or you can download a PDF of the schematics . Castor & Pollux is certified open source hardware .","title":"Open source hardware &amp; software"},{"location":"#warranty-disclaimers-and-limits","text":"Modules purchased from Winterbloom have a warranty of six months from the date of purchase. This warranty covers any manufacturing defects in the module. It does not cover damage due to incorrect handling, storage, power, overvoltage events, or modifications. Please contact us if you are experiencing issues with your module. Modules returned under warranty will either be refunded, replaced, or repaired at our discretion. You will be responsible for the cost of returning the module to Winterbloom. Because Eurorack has a vast number of possible combinations of power supplies, modules, cases, and accessories, it is impossible for us to guarantee compatibility with every possible configuration. We make a reasonable effort to test modules with several power supplies, cases, and other modules. We encourage tinkering, however, we will not refund, repair, or replace any products that have been modified. We have stress tested Castor & Pollux under the following conditions. These are provided for reference only; we do not guarantee that the module will function under these conditions. Continuous run time: at least 48 hours Overvoltage from power supply: at least \u00b118 V Reverse voltage from power supply: at least \u00b118 V Undervoltage from power supply: as low as \u00b110 V Over and under voltage on inputs: at least \u00b18 V Output connected to another output: at least \u00b18 V Output shorted to ground: at least 60 minutes","title":"Warranty, disclaimers, and limits"},{"location":"#acknowledgments-and-thanks","text":"Castor & Pollux would not be possible without the help of the Adafruit, support from Microchip, and the volumes of literature documenting and analyzing the Juno's DCO design. We would also like to acknowledge the following individuals for their outstanding support: Jeremy Blake Kris Kaiser Stephen McCaul Sarah Ocean Izaak Hollander","title":"Acknowledgments and thanks"},{"location":"build/","text":"Castor & Pollux kit build guide # Before you build Tools and materials required Kit contents Power header 9mm pots Tactile switch Jacks and trimpots Nuts Knobs Module completed Expander All done Before you build # Welcome to the build guide for Castor & Pollux's DIY kit. We hope you have a great time putting this module together and a wonderful time using it. Please read all instructions thoroughly before starting. If you have questions or run into trouble please reach out to us on discord or drop us an email at support@winterbloom.com This build is a intermediate level kit. You should be comfortable soldering through-hole components and working near surface mount components. If you're not, we encourage you to try out some other kits first, like our Big Honking Button kit . Even if you've got some experience, we recommend taking a look at Adafruit's guide to excellent soldering to refresh your knowledge. By the way, we program, test, and calibrate the main circuit board before sending it to you, so you don't have to worry about any of that- once you're done building you'll be good to go! This build takes around one hour to complete. Tools and materials required # Before jumping in, make sure you have: Safety glasses. Yes, really. Proper ventilation - at least open a window or two. A soldering iron, like this one . Solder, we can recommend Adafruit's 60/40 no-clean rosin core solder . A small flat head screwdriver, like this one . Fairy We suggest using solder with \"no clean\" flux. If you use a different kind of flux, be sure to carefully clean the flux residue off based on the guidelines provided by the manufacturer of your solder. Take special care with the LEDs and potentiometers, as they can be damaged by water and flux cleaners. Kit contents # Your kit should contain the following items. If any are missing please email us at support@winterbloom.com . Test test test Faceplate Mainboard Expander board Expander faceplate Rubber bands (2) Expander cable Tactile switch Tactile switch cap Eurorack power header Nuts for 1/8\" jacks (13) 1/8\" jacks (13) Small knobs (4) Big knobs (2) Tall trimmer pots (6) 9mm pots (6) Washers and nuts for 9mm pots (6) (1) Mainboard (1) Faceplate (1) Expander board (1) Expander faceplate (1) Expander cable (13) 1/8\" jacks (13) Hex nuts for the 1/8\" jacks (6) Tall trimmer pots (6) 9mm pots (6) Washers and nuts for the 9mm pots (4) Small knobs (2) Large knobs (1) Tactile switch (1) Tactile switch cap (1) Eurorack power header (2) Rubber bands Power header # Your first task is to solder the 10-pin Eurorack power connector to the mainboard. The power connector goes on the back side of the board. When placing note the notch in the outline on the board . You'll need to make sure the slot on the connector matches where the notch is on the outline . Once placed, make sure to push it flush against the board and then solder the 10 pins on the front side of the board. Be careful here and avoid touching the small components near the pins with your iron. Watch out for those LEDs! Avoid touching the LEDs with your iron- they really don't like being melted and they're very hard to replace. 9mm pots # The next task is placing and soldering the six 9mm pots on the mainboard. This step requires special care and attention to make sure that the front panel aligns correctly. Please make sure everything is correct before soldering anything in place. One of the six pots has been modified - its pins are shorter and bent outwards. Find this one and place it aside for the moment. Place five of the six pots onto the mainboard in the spots labeled pitch , duty , and lfo . You may need to bend or straighten the mounting legs on the pots to get them in place. Take the remaining, modified pot and place it on the spot labeled crossfade . This pot will not be as secure as the others, but make sure the pins line up with the pads on the as board shown below. Next, take one of the 1/8\" jacks and place it into the spot at the center bottom edge of the board labeled mix : Next, carefully place the faceplate onto the front of the module. Make sure all of the pots and the jack are aligned and resting in their respective holes. Take one of the rubber bands and wrap it around the board and faceplate twice to hold the faceplate in place during the next few steps. Flip the whole thing upside-down and solder the pots and jack in place. Warning Take extra care not to hit any of the surface mount components with your iron. Next, flip the assembly rightside-up and remove the rubber bands and faceplate. Finally, solder the legs of the modified pot to the pads on the board. Take care not to accidentally bridge the legs together. If you find that the legs are misaligned, you can flip the board back over and melt the solder on the mounting legs and twist it back into alignment. Tactile switch # Next up is the tactile switch and its cap. Place the tactile switch on the spot labeled btn on the mainboard. Make sure it's fully inserted against the board. Next, place the cap on top of the tactile switch and press in firmly to completely seat it on the switch. Jacks and trimpots # Next up is all six trimpots and six of the 1/8\" jacks. Start from the right side of the board and place the pots and jacks for ramp , pulse , duty , sub , pitch , and out . Continue on the left side with the pots and jacks for pulse , ramp , sub , duty , out , and pitch . Next, place the faceplate and rubber band just as you did earlier. Flip the module upside-down and solder the pots and jacks into place. Nuts # Now that everything is soldered in place the next step is to secure the faceplate using nuts. Start with the six larger nuts and washers for the 9mm pots. Place a washer on the shaft of each of the six 9mm pots. With the washers in place, place the nuts onto the shafts and tighten them in place. Next up is the seven hex nuts for the 1/8 jacks. Place the nuts on each jack and tighten them in place. Knobs # The final step for the main module is attaching the six knobs. Start by loosening the set screw on each of the knobs using a small flat head screwdriver. Next, turn all of the potentiometers fully counterclockwise. Place the two large knobs on the top two shafts with the indicator line at the 7 o' clock position. Tighten the set screws to secure the knobs in place. Repeat the same process for the four smaller knobs. Module completed # Congrats, you finished building your very own Castor & Pollux! Continue reading to finish assembling the expander if you'd like. Don't forget to go check out the User's Guide . We'd love to see your work, feel free to tag us on social media - we're @wntrblm on Twitter and Instagram . Expander # To assemble the expander, you'll need the expander faceplate, six 1/8\" jacks, six nuts for the jacks, and the expander board. Start by placing all six of the 1/8\" jacks onto the front side of the expander board. Next, place the faceplate onto the jacks and temporarily hold it in place using a rubber band. Flip it upside-down and solder all of the jacks into place. Flip it rightside-up and secure the faceplate using the hex nuts. & you're finished! All done # Congrats on building your very own Castor & Pollux, we hope you had a lovely time! Don't forget to go check out the User's Guide . We'd love to see your work, feel free to tag us on social media - we're @wntrblm on Twitter and Instagram . If you have any feedback or ran into any issues, feel free to drop us an email at support@winterbloom.com or file a issue on GitHub .","title":"Kit Build Instructions"},{"location":"build/#before-you-build","text":"Welcome to the build guide for Castor & Pollux's DIY kit. We hope you have a great time putting this module together and a wonderful time using it. Please read all instructions thoroughly before starting. If you have questions or run into trouble please reach out to us on discord or drop us an email at support@winterbloom.com This build is a intermediate level kit. You should be comfortable soldering through-hole components and working near surface mount components. If you're not, we encourage you to try out some other kits first, like our Big Honking Button kit . Even if you've got some experience, we recommend taking a look at Adafruit's guide to excellent soldering to refresh your knowledge. By the way, we program, test, and calibrate the main circuit board before sending it to you, so you don't have to worry about any of that- once you're done building you'll be good to go! This build takes around one hour to complete.","title":"Before you build"},{"location":"build/#tools-and-materials-required","text":"Before jumping in, make sure you have: Safety glasses. Yes, really. Proper ventilation - at least open a window or two. A soldering iron, like this one . Solder, we can recommend Adafruit's 60/40 no-clean rosin core solder . A small flat head screwdriver, like this one . Fairy We suggest using solder with \"no clean\" flux. If you use a different kind of flux, be sure to carefully clean the flux residue off based on the guidelines provided by the manufacturer of your solder. Take special care with the LEDs and potentiometers, as they can be damaged by water and flux cleaners.","title":"Tools and materials required"},{"location":"build/#kit-contents","text":"Your kit should contain the following items. If any are missing please email us at support@winterbloom.com . Test test test Faceplate Mainboard Expander board Expander faceplate Rubber bands (2) Expander cable Tactile switch Tactile switch cap Eurorack power header Nuts for 1/8\" jacks (13) 1/8\" jacks (13) Small knobs (4) Big knobs (2) Tall trimmer pots (6) 9mm pots (6) Washers and nuts for 9mm pots (6) (1) Mainboard (1) Faceplate (1) Expander board (1) Expander faceplate (1) Expander cable (13) 1/8\" jacks (13) Hex nuts for the 1/8\" jacks (6) Tall trimmer pots (6) 9mm pots (6) Washers and nuts for the 9mm pots (4) Small knobs (2) Large knobs (1) Tactile switch (1) Tactile switch cap (1) Eurorack power header (2) Rubber bands","title":"Kit contents"},{"location":"build/#power-header","text":"Your first task is to solder the 10-pin Eurorack power connector to the mainboard. The power connector goes on the back side of the board. When placing note the notch in the outline on the board . You'll need to make sure the slot on the connector matches where the notch is on the outline . Once placed, make sure to push it flush against the board and then solder the 10 pins on the front side of the board. Be careful here and avoid touching the small components near the pins with your iron. Watch out for those LEDs! Avoid touching the LEDs with your iron- they really don't like being melted and they're very hard to replace.","title":"Power header"},{"location":"build/#9mm-pots","text":"The next task is placing and soldering the six 9mm pots on the mainboard. This step requires special care and attention to make sure that the front panel aligns correctly. Please make sure everything is correct before soldering anything in place. One of the six pots has been modified - its pins are shorter and bent outwards. Find this one and place it aside for the moment. Place five of the six pots onto the mainboard in the spots labeled pitch , duty , and lfo . You may need to bend or straighten the mounting legs on the pots to get them in place. Take the remaining, modified pot and place it on the spot labeled crossfade . This pot will not be as secure as the others, but make sure the pins line up with the pads on the as board shown below. Next, take one of the 1/8\" jacks and place it into the spot at the center bottom edge of the board labeled mix : Next, carefully place the faceplate onto the front of the module. Make sure all of the pots and the jack are aligned and resting in their respective holes. Take one of the rubber bands and wrap it around the board and faceplate twice to hold the faceplate in place during the next few steps. Flip the whole thing upside-down and solder the pots and jack in place. Warning Take extra care not to hit any of the surface mount components with your iron. Next, flip the assembly rightside-up and remove the rubber bands and faceplate. Finally, solder the legs of the modified pot to the pads on the board. Take care not to accidentally bridge the legs together. If you find that the legs are misaligned, you can flip the board back over and melt the solder on the mounting legs and twist it back into alignment.","title":"9mm pots"},{"location":"build/#tactile-switch","text":"Next up is the tactile switch and its cap. Place the tactile switch on the spot labeled btn on the mainboard. Make sure it's fully inserted against the board. Next, place the cap on top of the tactile switch and press in firmly to completely seat it on the switch.","title":"Tactile switch"},{"location":"build/#jacks-and-trimpots","text":"Next up is all six trimpots and six of the 1/8\" jacks. Start from the right side of the board and place the pots and jacks for ramp , pulse , duty , sub , pitch , and out . Continue on the left side with the pots and jacks for pulse , ramp , sub , duty , out , and pitch . Next, place the faceplate and rubber band just as you did earlier. Flip the module upside-down and solder the pots and jacks into place.","title":"Jacks and trimpots"},{"location":"build/#nuts","text":"Now that everything is soldered in place the next step is to secure the faceplate using nuts. Start with the six larger nuts and washers for the 9mm pots. Place a washer on the shaft of each of the six 9mm pots. With the washers in place, place the nuts onto the shafts and tighten them in place. Next up is the seven hex nuts for the 1/8 jacks. Place the nuts on each jack and tighten them in place.","title":"Nuts"},{"location":"build/#knobs","text":"The final step for the main module is attaching the six knobs. Start by loosening the set screw on each of the knobs using a small flat head screwdriver. Next, turn all of the potentiometers fully counterclockwise. Place the two large knobs on the top two shafts with the indicator line at the 7 o' clock position. Tighten the set screws to secure the knobs in place. Repeat the same process for the four smaller knobs.","title":"Knobs"},{"location":"build/#module-completed","text":"Congrats, you finished building your very own Castor & Pollux! Continue reading to finish assembling the expander if you'd like. Don't forget to go check out the User's Guide . We'd love to see your work, feel free to tag us on social media - we're @wntrblm on Twitter and Instagram .","title":"Module completed"},{"location":"build/#expander","text":"To assemble the expander, you'll need the expander faceplate, six 1/8\" jacks, six nuts for the jacks, and the expander board. Start by placing all six of the 1/8\" jacks onto the front side of the expander board. Next, place the faceplate onto the jacks and temporarily hold it in place using a rubber band. Flip it upside-down and solder all of the jacks into place. Flip it rightside-up and secure the faceplate using the hex nuts. & you're finished!","title":"Expander"},{"location":"build/#all-done","text":"Congrats on building your very own Castor & Pollux, we hope you had a lovely time! Don't forget to go check out the User's Guide . We'd love to see your work, feel free to tag us on social media - we're @wntrblm on Twitter and Instagram . If you have any feedback or ran into any issues, feel free to drop us an email at support@winterbloom.com or file a issue on GitHub .","title":"All done"},{"location":"settings/","text":"To use this editor: Connect your Castor & Pollux to your Eurorack power supply. The module must be powered by the Eurorack power supply. Connect a USB cable from your computer to Castor & Pollux's USB port. It's located on the right side of the module on the bottom circuit board. Click the connect button , and when prompted, allow the page access to your MIDI devices. Once connected the editor will appear and load the current settings from your device. Once you're done editing, click the save button at the bottom of the editor. Saving should automatically reset your module, but, if you don't see the changes take effect then try restarting your module. You can do this by turning it off and back on or by pressing the small reset button that's right beside the USB port. Note This editor uses WebMIDI to communicate with Castor & Pollux. It works in Google Chrome , Microsoft Edge , and Opera ( full list of supported browsers ). If you run into issues, feel free to reach out . Connect Device info \ud83e\uddda\u200d\u2640\ufe0f You'll need to update your module's firmware to use this editor. Don't worry, it's really easy! Get the newest firmware Firmware version content_copy Hardware revision Serial number content_copy This is your Castor & Pollux's current firmware version, hardware revision, and serial number. We might ask you for this information if you reach out for help. C&PI is hardware revisions 1 through 4 and C&PII is hardware revisions 5 and above. \ud83e\uddda\u200d\u2640\ufe0f A new firmware version is available: Settings LED brightness percent The higher the brightness, the more power the module will consume. At maximum brightness, it consumes 130mA from the +12v rail. Base pitch CV offset octaves (volts) This setting effectively determines the starting note for the module since the pitch CV input and offset knobs are added to this value to determine the final pitch CV. By default, it's 1.0 . Castor pitch knob minimum octaves (volts) Castor pitch knob maximum octaves (volts) Pollux pitch knob minimum octaves (volts) Pollux pitch knob maximum octaves (volts) These settings determine the pitch offset knob's range for each oscillator. By default, they have a range of about -1 to +1 octaves (volts). The value of the pitch offset knob is added to the pitch CV input. Note that because the module's analog-to-digital converter (ADC) isn't perfect, the knobs don't quite reach 100% of their range. You may need to nudge these to give the knob some headroom. Pitch knob non-linearity percent The firmware adjusts the pitch CV knobs so that it's easier to tune the oscillators. It does this by spreading the values near the center of the knob out so that the range at the center is more fine. This makes the knobs non-linear. This setting controls how \"intense\" that non-linearity is. 0.33% is equivalent to a linear response. Higher values make it easier and easier to tune the oscillator but sacrifices the range, values lower than 33% will make it harder to tune and aren't recommended. This is 60% by default. Quantization Enable Castor's semitone quantization When nothing is patched into Castor's pitch CV input, Castor's pitch knob becomes a coarse pitch knob that sweeps across 6 octaves. By default, in this situation Castor will quantize to the nearest semitone. You can disable this to get continuous frequency changes. Jack detection Enable pitch jack detection Zero detection threshold code points These settings determine how C&P detects the presence or absence of a signal at the pitch CV jacks. C&P does this by checking if the signal at the jack is 0V . The intended behavior is that when no cable is patched to Castor's pitch input, it'll switch to \"coarse\" pitch behavior. Likewise for Pollux, if there's no cable patch to its pitch CV then it will follow Castor. However, some users may find this behavior undesirable, especially if you often send pitch CV of around 0V . Chorus maximum intensity percent This setting controls the maximum intensity of the chorusing feature. The intensity is the amount that the internal LFO effects the pitch of the second oscillator (Pollux). LFO frequency hertz This setting controls the default frequency of the internal low-frequency oscillator (LFO). This LFO is used by the chorusing feature and the pulse-width modulation (PWM) feature. The frequency can be changed anytime by holding the hard sync button and moving the chorusing amount ( \u03c6 ) knob, this just sets the frequency at start-up. LFO waveform Triangle Sine Sawtooth Square amplitude Triangle Sine Sawtooth Square amplitude frequency ratio These settings control the overall waveshape of the internal LFO. The LFO is generated by adding two indepedent waveforms together. By default, the first waveform is a triangle wave and the second waveform is turned off. Pulse width behavior Smooth Classic This controls the behavior of the pulse wave when the pulse width is modulated. Smooth is almost certainly what you want, however, if you choose Classic you'll introduce some interesting glitchy/stepping behavior when the pulse width changes. The reason this setting exists is because prior to the July 2022 firmware release, Castor & Pollux had a bug that caused the effective pulse width resolution to be far lower than intended. Some folks like the old sound, so we added this setting for nostalgia. Danger zone These settings are calibrated during assembly and do not have default values . Changing these settings can cause your module to behave incorrectly, so do not touch them unless you know what you're doing or have been asked to do so by support. It's highly recommended that you write down these settings before making changes in case you need to restore them. Let me edit dangerous settings 8 MHz clock measured frequency Hertz Castor & Pollux uses an internal 8 MHz clock to generate the frequency signals for the oscillators. The actual frequency of this oscillator can vary between 7.94 MHz and 8.06 MHz. This setting is set to compensate for that so that the oscillator outputs are in tune. CV input gain correction multiplier CV input error correction code points ADC gain correction x multiplier ADC offset correction code points These settings determine how the module corrects for gain and offset errors in its analog-to-digital converter (ADC). We calibrate every Castor & Pollux during manufacturing and save the calibration data to the device. However, we keep a copy of it in case it somehow gets erased or corrupted. You can use the restore button below to load the values that were originally on your device. If the button is greyed out, then we don't have a copy of your module's calibration data. \u2639\ufe0f Restore to factory values Tuning calibration Measure 1V Measure 3V Gain error Offset error Save This allows you to re-calibrate your module's tuning. You should only do this if you absolutely know what you're doing or have been instructed to do so by support. Please write down the values for the settings in the previous section as this will overwrite them. To use this, connect the most accurate CV source that you have to the first oscillator's pitch input. Set the CV to 1V and click \"Measure 1V\". Repeat for 3V. Once both measurements have been taken, it will calculate new values for tuning calibration. Click \"Save\" to write these to the device. Save & restart","title":"Settings Editor"}]}